#include<bits/stdc++.h>
using namespace std;

class node{
    public:
    int data;
    node* left;
    node* right;
    
    node(int d){
        this->data=d;
        this->left=NULL;
        this->right=NULL;
    }
};

node* mirrorFind(node* root){
    if(root == NULL){
        return 0;
    }
    else{
        node* temp;
        mirrorFind(root->left);
        mirrorFind(root->right);
        
        temp = root->left;
        root->left=root->right;
        root->right=temp;
    }
    
}

void printInorder(node* root)
{
    if (root == NULL)
        return;
 
    /* first recur on left child */
    printInorder(root->left);
 
    /* then print the data of node */
    cout << root->data << " ";
 
    /* now recur on right child */
    printInorder(root->right);
}


int main(){
    //   1
    //  2 3
    // 4   NULL
    
    node* root = new node(1);
    root->left = new node(2);
    root->left->left = new node(4);
    root->right = new node(3);
    
    root = mirrorFind(root);
    printInorder(root);
}
